{"version":3,"sources":["components/ChatMessages/UserMessage.js","images/fox-avatar.svg","components/ChatMessages/OtherUserMessage.js","components/ChatMessages/SendMessage.js","images/plus.svg","components/ChatMessages/ChatMessages.js","images/add.svg","images/accept.svg","images/close.svg","components/Dialogs/DialogComponent.js","pages/Chats.js","services/postSignUp.js","components/SignUp/SignUpComponent.js","pages/SignUp.js","images/fox-head 1.svg","services/postLogin.js","components/LogIn/LogInComponent.js","pages/LogIn.js","components/PopupAccount/MainPopup.js","components/PopupAccount/PasswordPopup.js","components/PopupAccount/PhotoPopup.js","components/PopupAccount/Popup.js","images/photo-default.svg","components/Header/Header.js","App.js","reportWebVitals.js","store/store.js","index.js"],"names":["UserMessage","props","className","name","timestamp","text","OtherUserMessage","src","avatar","SendMessage","userId","useSelector","state","textInputRef","useRef","useState","enteredText","setEnteredText","sendMessage","event","preventDefault","onTextSent","target","value","fetch","method","body","JSON","stringify","data","room_id","roomId","headers","then","response","ok","json","id","onSubmit","ref","onChange","form","placeholder","onKeyPress","e","key","required","ChatMessages","dialog","setDialog","showAdd","setShowAdd","inviteInputRef","transformUnix","unixTimestamp","date","Date","getHours","getMinutes","substr","useEffect","interval","setInterval","messagesList","message","push","sender_id","time","sender_name","clearInterval","inviteEmail","current","participant_email","alert","type","plus","alt","roomName","onClick","length","map","now","DialogComponent","dialogs","setDialogs","initialDialogs","setInitialDialogs","isSearch","setIsSearch","roomNameRef","dialogList","filteredDialogs","filter","toLowerCase","includes","onBlur","add","accept","close","openChat","Chats","isOpen","setIsOpen","setRoomId","setRoomName","postSignUp","a","console","log","SignUpComponent","fullName","setFullName","email","setEmail","password","setPassword","repeatedPassword","setRepeatedPassword","fullNameDirty","setFullNameDirty","emailDirty","setEmailDirty","passwordDirty","setPasswordDirty","repeatedPasswordDirty","setRepeatedPasswordDirty","fullNameError","setFullNameError","emailError","setEmailError","passwordError","setPasswordError","repeatedPasswordError","setRepeatedPasswordError","formValid","setFormValid","history","useHistory","blurHandler","full_name","fullNameHandler","test","String","emailHandler","passwordHandler","repeatedPasswordHandler","disabled","style","background","to","SignUp","postLogin","LogInComponent","dispatch","useDispatch","invalidCredentials","setInvalidCredentials","logo","payload","toString","localStorage","setItem","LogIn","MainPopup","onCloseSettings","photoSrc","openTab","clear","PasswordPopup","currentPassword","setCurrentPassword","newPassword","setNewPassword","confirmPassword","setConfirmPassword","PhotoPopup","setPhotoSrc","editingPhoto","setEditingPhoto","toggleEditPhoto","url","files","URL","createObjectURL","blob","Promise","resolve","reject","reader","FileReader","onloadend","result","onerror","readAsDataURL","dataUrl","removeItem","Popup","activeTab","setActiveTab","handleOpenTab","getItem","closeSettings","Header","location","useLocation","pathname","onOpenSettings","replace","App","isLoggedIn","settingsOpened","setSettingsOpened","photo","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","store","createStore","action","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4880e3dc.chunk.js","sourcesContent":["import './ChatMessages.css'\r\n\r\nfunction UserMessage(props) {\r\n    return (\r\n        <div className=\"user-message-container\">\r\n            <div className=\"user-message-data\"><p><span>{props.name}</span> <span>{props.timestamp}</span></p></div>\r\n            <div className=\"user-message-text\">{props.text}\r\n               </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserMessage;","export default __webpack_public_path__ + \"static/media/fox-avatar.a14ed2dc.svg\";","import './ChatMessages.css'\r\nimport avatar from '../../images/fox-avatar.svg'\r\n\r\nfunction OtherUserMessage(props) {\r\n    return (\r\n        <div className=\"other-user-message-container\">\r\n            <div className=\"other-user-message-photo\"><img src={avatar}/></div>\r\n            <div className=\"other-user-message\">\r\n                <div className=\"other-user-message-data\"><p><span>{props.name}</span> <span>{props.timestamp}</span></p></div>\r\n                <div className=\"other-user-message-text\">{props.text}\r\n            </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default OtherUserMessage;","import './ChatMessages.css'\r\nimport {useRef, useState} from 'react'\r\nimport {useSelector} from \"react-redux\";\r\n\r\nfunction SendMessage(props) {\r\n  const userId = useSelector((state) => state.userId);\r\n  const textInputRef = useRef();\r\n\r\n  const [enteredText, setEnteredText] = useState(\"\");\r\n\r\n  const getTextHandler = (event) => {\r\n    setEnteredText(event.target.value);\r\n  }\r\n\r\n  const sendMessage = (event) => {\r\n    event.preventDefault()\r\n    props.onTextSent(event.target.value)\r\n\r\n    fetch(\r\n      `http://81.180.72.35:8080/message/create/${userId}`,\r\n      {\r\n        method: \"POST\",\r\n        body: JSON.stringify({data: enteredText, room_id: props.roomId}),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    )\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        }\r\n      })\r\n\r\n    setEnteredText(\"\")\r\n  }\r\n\r\n  return (\r\n    <div className=\"send-message-container\">\r\n      <form id=\"send-message-form\" onSubmit={sendMessage}>\r\n                <textarea ref={textInputRef} value={enteredText} onChange={getTextHandler}\r\n                          className=\"send-message-input\"\r\n                          form=\"send-message-form\" name=\"message\" placeholder=\"Enter the message and tap Enter...\"\r\n                          onKeyPress={(e) => e.key === 'Enter' && sendMessage(e)}\r\n                          required/>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SendMessage;","export default __webpack_public_path__ + \"static/media/plus.c60e15f2.svg\";","import UserMessage from \"./UserMessage\";\r\nimport OtherUserMessage from \"./OtherUserMessage\";\r\nimport SendMessage from \"./SendMessage\";\r\nimport {useEffect, useRef, useState} from \"react\";\r\nimport avatar from '../../images/fox-avatar.svg'\r\nimport plus from '../../images/plus.svg'\r\nimport {useSelector} from \"react-redux\";\r\n\r\nfunction ChatMessages(props) {\r\n  const [dialog, setDialog] = useState([]);\r\n  const [showAdd, setShowAdd] = useState(false);\r\n  const inviteInputRef = useRef();\r\n  const userId = useSelector((state) => state.userId);\r\n\r\n  const transformUnix = (unixTimestamp) => {\r\n    let date = new Date(unixTimestamp * 1000);\r\n    let hours = date.getHours();\r\n    let minutes = \"0\" + date.getMinutes();\r\n    return hours + ':' + minutes.substr(-2)\r\n  };\r\n\r\n  const typeMessage = (id, timestamp, text, name) => {\r\n    if (id != userId) {\r\n      return <OtherUserMessage\r\n        timestamp={timestamp} text={text} name={name}/>\r\n    } else {\r\n      return <UserMessage timestamp={timestamp} text={text} name=\"Me\"/>\r\n    }\r\n  }\r\n\r\n  const getDialog = () => {\r\n    fetch(`http://81.180.72.35:8080/message/${props.roomId}`\r\n      , {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Accept': 'application/json'\r\n        }\r\n      }\r\n    ).then(function (response) {\r\n      return response.json();\r\n    })\r\n      .then(function (data) {\r\n        const messagesList = []\r\n        for (const message in data.data) {\r\n          messagesList.push({\r\n            text: data.data[message].data,\r\n            userId: data.data[message].sender_id,\r\n            timestamp: transformUnix(data.data[message].time),\r\n            name: data.data[message].sender_name\r\n          })\r\n        }\r\n        setDialog(messagesList)\r\n      });\r\n  }\r\n\r\n  const textSentHandler = (text) => {\r\n    setDialog((dialog) => [...dialog, {\r\n      text,\r\n      userId,\r\n      timestamp: transformUnix(Date.now()),\r\n      name: \"Me\"\r\n    }])\r\n  }\r\n\r\n  const sendInvite = (event) => {\r\n    event.preventDefault()\r\n    const inviteEmail = inviteInputRef.current.value;\r\n    fetch(\r\n      `http://81.180.72.35:8080/room/add/${userId}`,\r\n      {\r\n        method: \"POST\",\r\n        body: JSON.stringify({participant_email: inviteEmail, room_id: props.roomId}),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    )\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          alert(`Invited ${inviteEmail} to this room`)\r\n          return response.json();\r\n        } else {\r\n          response.json().then((data) => {\r\n            alert(`Invalid email`)\r\n          });\r\n        }\r\n      })\r\n    setShowAdd(false)\r\n  };\r\n//Please when working, comment this\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      getDialog()\r\n    }, 3000);\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, [props.roomId])\r\n\r\n  //and uncomment this\r\n  // useEffect(() => {\r\n  //   getDialog()\r\n  // }, [props.roomId])\r\n\r\n  return (\r\n    <div className=\"chat-messages-container\">\r\n      {showAdd && <div className=\"chat-add-participant\">\r\n        <div className=\"heading\">Add a participant</div>\r\n        <form onSubmit={sendInvite}>\r\n          <input type=\"email\" placeholder=\"Enter user's email\" ref={inviteInputRef}/>\r\n          <input type=\"image\" src={plus} alt=\"Add user\"/>\r\n        </form>\r\n      </div>}\r\n      <div className=\"chat-messages-header\">\r\n        <div className=\"chat-messages-avatar\"><img src={avatar}/></div>\r\n        <span>{props.roomName}</span>\r\n        <button className=\"chat-messages-add\" onClick={() => setShowAdd(true)}><img src={plus} alt=\"Add participants\"/>\r\n        </button>\r\n        <button className=\"chat-messages-back\">&lt;-Back</button>\r\n      </div>\r\n      <div className=\"chat-messages-dialog-container\">\r\n        {\r\n          dialog && dialog.length > 0 && dialog.map((message) => typeMessage(message.userId, message.timestamp, message.text, message.name))\r\n        }\r\n        {dialog.length < 0 &&\r\n        <div className=\"chat-messages-container-empty\">Write first to start chatting</div>}\r\n      </div>\r\n      <SendMessage roomId={props.roomId} onTextSent={textSentHandler}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatMessages;","export default __webpack_public_path__ + \"static/media/add.061309f3.svg\";","export default __webpack_public_path__ + \"static/media/accept.acf55764.svg\";","export default __webpack_public_path__ + \"static/media/close.d6fc4d51.svg\";","import React from \"react\";\r\nimport './Dialog.css'\r\nimport {useEffect, useState, useRef} from \"react\";\r\nimport avatar from \"../../images/fox-avatar.svg\";\r\nimport add from \"../../images/add.svg\";\r\nimport accept from \"../../images/accept.svg\";\r\nimport close from \"../../images/close.svg\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\nexport default function DialogComponent(props) {\r\n  const userId = useSelector((state) => state.userId);\r\n\r\n  const [dialogs, setDialogs] = useState([]);\r\n  const [initialDialogs, setInitialDialogs] = useState([]);\r\n  const [isSearch, setIsSearch] = useState(true);\r\n  const roomNameRef = useRef();\r\n\r\n  const searchDialog = (event) => {\r\n    const filteredDialogs = dialogs.filter(dialog => dialog.name.toLowerCase().includes(event.target.value.toLowerCase()));\r\n    event.target.value.length === 0 ? setDialogs(initialDialogs) : setDialogs(filteredDialogs)\r\n  };\r\n\r\n  const getDialogs = () => {\r\n    fetch(`http://81.180.72.35:8080/room/${userId}`\r\n      , {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Accept': 'application/json'\r\n        }\r\n      }\r\n    ).then(function (response) {\r\n      return response.json();\r\n    })\r\n      .then(function (data) {\r\n        const dialogs = data.data;\r\n        const dialogList = []\r\n        for (const dialog in dialogs) {\r\n          dialogList.push({\r\n            name: dialogs[dialog].name,\r\n            id: dialogs[dialog].id\r\n          })\r\n        }\r\n        setDialogs(dialogList)\r\n        setInitialDialogs(dialogList)\r\n      });\r\n  }\r\n\r\n  const createRoom = (event) => {\r\n    event.preventDefault();\r\n    const name = roomNameRef.current.value;\r\n    fetch(\r\n      `http://81.180.72.35:8080/room/create/${userId}`,\r\n      {\r\n        method: \"POST\",\r\n        body: JSON.stringify({name}),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    )\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        }\r\n      }).then(function (data) {\r\n        setInitialDialogs((initialDialogs) => [...initialDialogs, {\r\n          name,\r\n          id: data.data.id\r\n        }])\r\n        setDialogs((dialogs) => [...dialogs, {\r\n          name,\r\n          id: data.data.id\r\n        }])\r\n      }\r\n    );\r\n    setIsSearch(true);\r\n  };\r\n\r\n  const resetSearch = () => {\r\n    setDialogs(initialDialogs);\r\n  };\r\n//when working comment this\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      getDialogs()\r\n    }, 5000);\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, [])\r\n\r\n  //and uncomment this\r\n  // useEffect(() => {\r\n  //   getDialogs()\r\n  // }, [])\r\n\r\n  return (\r\n    <div className=\"dialog-wrapper\">\r\n      {!isSearch ?\r\n        <div className=\"dialog-create-room\">\r\n          <form onSubmit={createRoom}>\r\n            <input type=\"text\"\r\n                   placeholder=\"Create a room\"\r\n                   className=\"dialog-input\"\r\n                   ref={roomNameRef}\r\n            />\r\n            <input type=\"image\" src={accept} alt=\"Create\" className=\"dialog-accept\"/>\r\n            <button className=\"dialog-cancel\" onClick={() => {\r\n              setIsSearch(true);\r\n            }}><img src={close}/></button>\r\n          </form>\r\n        </div> :\r\n        <div className=\"dialog-search-wrapper\">\r\n          <input type=\"text\"\r\n                 placeholder=\"Search\"\r\n                 className=\"dialog-input\"\r\n                 onChange={searchDialog}\r\n                 onBlur={resetSearch}\r\n          />\r\n          <button className=\"dialog-add\" onClick={() => setIsSearch(false)}><img src={add}/></button>\r\n        </div>}\r\n      <div>\r\n        <ul className=\"dialog-list\">\r\n          {dialogs.map(dialog => (\r\n            <li className=\"dialog-list-item\" onClick={() => props.openChat(dialog.id, dialog.name)}>\r\n              <div className=\"dialog-photo\"><img src={avatar}/></div>\r\n              <div className=\"dialog-name\">{dialog.name}</div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import ChatMessages from \"../components/ChatMessages/ChatMessages\"\r\nimport DialogComponent from \"../components/Dialogs/DialogComponent\"\r\nimport {useState} from \"react\";\r\nimport \"./Chats.css\"\r\n\r\nfunction Chats() {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [roomId, setRoomId] = useState(null);\r\n  const [roomName, setRoomName] = useState(null);\r\n\r\n  const openChat = (id, name) => {\r\n    setIsOpen(true);\r\n    setRoomId(id);\r\n    setRoomName(name)\r\n  };\r\n\r\n    return (\r\n        <div className=\"chats-wrapper\">\r\n            <DialogComponent openChat={openChat}/>\r\n          {isOpen && <ChatMessages roomId={roomId} roomName={roomName}/>}\r\n          {!isOpen && <div className=\"chats-none\">No chat opened.</div>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chats;","export const postSignUp = async (body) => {\r\n    try {\r\n        const response = await fetch(\r\n            'http://81.180.72.35:8080/user/register',\r\n            {\r\n                method: \"POST\",\r\n                headers: {\r\n                    'Content-type': 'application/json',\r\n                },\r\n                body: JSON.stringify(body),\r\n            }\r\n        );\r\n        return await response.json();\r\n    } catch (error) {\r\n        console.log(error.message);\r\n    }\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport './SignUp.css'\r\nimport {Link, useHistory} from \"react-router-dom\";\r\nimport {postSignUp} from \"../../services/postSignUp\";\r\n\r\n\r\n\r\nexport default function SignUpComponent (){\r\n    \r\n    const [fullName, setFullName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [repeatedPassword, setRepeatedPassword] = useState(\"\");\r\n    const [fullNameDirty, setFullNameDirty] = useState(false);\r\n    const [emailDirty, setEmailDirty] = useState(false);\r\n    const [passwordDirty, setPasswordDirty] = useState(false);\r\n    const [repeatedPasswordDirty, setRepeatedPasswordDirty] = useState(false);\r\n    const [fullNameError, setFullNameError] = useState(\"Full name fild can't be empty\");\r\n    const [emailError, setEmailError] = useState(\"Email filed can't be empty\");\r\n    const [passwordError, setPasswordError] = useState(\"Password filed can't be empty\");\r\n    const [repeatedPasswordError, setRepeatedPasswordError] = useState(\"Repeated password filed can't be empty\");\r\n    const [formValid, setFormValid] = useState(false);\r\n\r\n    let history = useHistory();\r\n\r\n    const fullNameHandler = (e) => {\r\n        setFullName(e.target.value);\r\n        if(!e.target.value){\r\n            setFullNameError(\"Full name field can't be empty\");\r\n        }\r\n        else {\r\n            setFullNameError(\"\")\r\n        }\r\n    }\r\n\r\n    const emailHandler = (e) => {\r\n        setEmail(e.target.value)\r\n        const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n         if (!re.test(String(e.target.value).toLowerCase())){\r\n             setEmailError('Email is invalid');\r\n             if(!e.target.value){\r\n                 setEmailError(\"Email filed can't be empty\");\r\n             }\r\n         }\r\n         else {\r\n             setEmailError(\"\");\r\n         }\r\n    }\r\n\r\n    const passwordHandler = (e) => {\r\n        setPassword(e.target.value);\r\n        if(e.target.value.length < 7){\r\n            setPasswordError(\"Password's length can't be less then 7\");\r\n            if(!e.target.value){\r\n                setPasswordError(\"Password filed can't be empty\")\r\n            }\r\n        }\r\n        else{\r\n            setPasswordError(\"\");\r\n        }\r\n    }\r\n\r\n    const repeatedPasswordHandler = (e) => {\r\n        setRepeatedPassword(e.target.value);\r\n        if(e.target.value !== password){\r\n            setRepeatedPasswordError(\"Passwords don't match\");\r\n        }\r\n        else{\r\n            setRepeatedPasswordError(\"\");\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(emailError || passwordError || fullNameError){\r\n            setFormValid(false);\r\n        }\r\n        else {\r\n            setFormValid(true);\r\n        }\r\n    }, [emailError, passwordError, fullNameError])\r\n\r\n    const blurHandler = (e) => {\r\n        switch (e.target.name){\r\n            case 'email':\r\n                setEmailDirty(true)\r\n                break\r\n            case 'password':\r\n                setPasswordDirty(true)\r\n                break\r\n            case 'fullName':\r\n                setFullNameDirty(true)\r\n                break\r\n            case 'confirmPassword':\r\n                setRepeatedPasswordDirty(true)\r\n                break\r\n        }\r\n    }\r\n\r\n    const submitHandler = (event) =>{\r\n        event.preventDefault();\r\n\r\n        const response = postSignUp({full_name: fullName, email: email, password: password});\r\n        history.push(\"/login\");\r\n    }\r\n\r\n    return(\r\n        <div className=\"wrapper\">\r\n            <h1 className=\"header\">Sign up</h1>\r\n            <div className=\"form\">\r\n                <form onSubmit={submitHandler}>\r\n                    {(fullNameError && fullNameDirty) && <span className=\"error\">{fullNameError}</span>}\r\n                    <input type=\"text\" placeholder=\"Enter full name\"\r\n                           value={fullName}\r\n                           name=\"fullName\"\r\n                           onBlur={e => blurHandler(e)}\r\n                           onChange={(e) => fullNameHandler(e)}\r\n                    />\r\n\r\n                    {(emailError && emailDirty) && <span className=\"error\">{emailError}</span>}\r\n                    <input type=\"text\" placeholder=\"Enter email\"\r\n                           value={email} name=\"email\"\r\n                           onBlur={e => blurHandler(e)}\r\n                           onChange={(e) => emailHandler(e)}\r\n                    />\r\n\r\n                    {(passwordError && passwordDirty) && <span className=\"error\">{passwordError}</span>}\r\n                    <input type=\"password\" placeholder=\"Enter password\"\r\n                           value={password} name=\"password\"\r\n                           onBlur={e => blurHandler(e)}\r\n                           onChange={(e) => passwordHandler(e)}\r\n                    />\r\n                    {(repeatedPasswordError && repeatedPasswordDirty) && <span className=\"error\">{repeatedPasswordError}</span>}\r\n                    <input type=\"password\"\r\n                           placeholder=\"Confirm password\"\r\n                           value={repeatedPassword} name=\"confirmPassword\"\r\n                           onBlur={e => blurHandler(e)}\r\n                           onChange={(e) => repeatedPasswordHandler(e)}\r\n                    />\r\n                    <button disabled={!formValid}\r\n                            type=\"submit\"\r\n                            className=\"btn-signUp\"\r\n                            style={!formValid ? {background: \"gray\"} : {}}\r\n                    >Sign up</button>\r\n                </form>\r\n                <div>\r\n                    <p className=\"p-already-register\">Already registered? <Link to=\"/login\">Sign in</Link></p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport SignUpComponent from \"../components/SignUp/SignUpComponent\";\r\n\r\nexport default function SignUp(){\r\n    return(\r\n        <div>\r\n            <SignUpComponent/>\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/fox-head 1.e9972e00.svg\";","export const postLogin = async (body) => {\r\n    try {\r\n        const response = await fetch(\r\n            'http://81.180.72.35:8080/user/login',\r\n            {\r\n                method: \"Post\",\r\n                headers: {\r\n                    'Content-type': 'application/json',\r\n                },\r\n                body: JSON.stringify(body),\r\n            }\r\n        );\r\n        return await response.json();\r\n    } catch (error) {\r\n        console.log(error.message);\r\n    }\r\n}","import React, {useState} from \"react\";\r\nimport './LogIn.css'\r\nimport logo from '../../images/fox-head 1.svg'\r\nimport {Link, useHistory} from \"react-router-dom\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {postLogin} from \"../../services/postLogin\";\r\n\r\nexport default function LogInComponent() {\r\n  const dispatch = useDispatch();\r\n\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [invalidCredentials, setInvalidCredentials] = useState(false);\r\n  const history = useHistory();\r\n\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const response = postLogin({email: email, password: password}).then(function (response) {\r\n        if (response.data !== null) {\r\n          dispatch({\r\n            type: \"LOGIN\",\r\n            payload: response.data.id.toString()\r\n          });\r\n          localStorage.setItem('userId', response.data.id.toString())\r\n          history.push('/chats');\r\n          setInvalidCredentials(false);\r\n        } else {\r\n          setInvalidCredentials(true);\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"logInWrapper\">\r\n      <img src={logo} alt=\"Logo\" className=\"logo\"/>\r\n      <p className=\"logo-text\">Foxy</p>\r\n      <form onSubmit={submitHandler} onChange={() => setInvalidCredentials(false)}>\r\n        <input type=\"text\"\r\n               placeholder=\"Email\"\r\n               value={email}\r\n               onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n        <input type=\"password\"\r\n               placeholder=\"Password\"\r\n               value={password}\r\n               onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n        {invalidCredentials && <div className=\"error-invalid\">Invalid credentials</div>}\r\n        <button type=\"submit\" className=\"btn-signUp\">Login</button>\r\n      </form>\r\n      <div>\r\n        <p className=\"p-already-register\">Don't have a profile? <Link to=\"/signup\">Sign up</Link></p>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React from \"react\";\r\nimport LogInComponent from \"../components/LogIn/LogInComponent\";\r\n\r\nexport default function LogIn () {\r\n    return(\r\n        <div>\r\n            <LogInComponent/>\r\n        </div>\r\n    )\r\n}","import \"./Popup.css\"\r\nimport {useState, useEffect} from \"react\"\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nfunction MainPopup(props) {\r\n  let history = useHistory();\r\n\r\n  const closeSettings = () => {\r\n    props.onCloseSettings(true)\r\n  }\r\n\r\n  const logout = () =>{\r\n    localStorage.clear();\r\n    history.push(\"/login\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"popup-container\">\r\n      <button className=\"popup-close\" onClick={closeSettings}></button>\r\n      <div className=\"popup-photo\"><img alt=\"profile-pic\" src={props.photoSrc}/>\r\n      </div>\r\n      <div className=\"popup-name\">{props.name}</div>\r\n      <div className=\"popup-option\">\r\n        <button className=\"popup-option-button privacy-button\" onClick={() => props.openTab(1)}>Privacy and\r\n          security\r\n        </button>\r\n      </div>\r\n      <div className=\"popup-option\">\r\n        <button className=\"popup-option-button change-photo-button\" onClick={() => props.openTab(2)}>Change\r\n          photo\r\n        </button>\r\n      </div>\r\n      <div className=\"popup-logout\">\r\n        <button className=\"popup-option-button logout-button\" onClick={logout}>Logout</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainPopup;","import './Popup.css'\r\nimport {useState} from 'react'\r\n\r\nfunction PasswordPopup(props) {\r\n\r\n    const [currentPassword, setCurrentPassword] = useState(\"\")\r\n    const [newPassword, setNewPassword] = useState(\"\")\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\")\r\n\r\n    const handleCurrentPassword = (event) => {\r\n        setCurrentPassword(event.target.value)\r\n    }\r\n\r\n    const handleNewPassword = (event) => {\r\n        setNewPassword(event.target.value)\r\n    }\r\n\r\n    const comparePassword = (event) => {\r\n        setConfirmPassword(event.target.value)\r\n    }\r\n    const handleSubmit = () => {\r\n      \r\n    }\r\n  const closeSettings = () => {\r\n    props.onCloseSettings()\r\n  }\r\n\r\n  return (\r\n    <div className=\"popup-container\">\r\n      <button className=\"popup-close\" onClick={closeSettings}></button>\r\n            <form className=\"popup-form-password\" onSubmit={handleSubmit}>\r\n              <div className=\"popup-headline\">Change Password</div>\r\n                <input className=\"popup-input\" type=\"password\" placeholder=\"Current password\" value={currentPassword}\r\n                       onChange={handleCurrentPassword}/>\r\n\r\n                <input className=\"popup-input\"  type=\"password\" placeholder=\"New Password\" value={newPassword}\r\n                       onChange={handleNewPassword}/>\r\n\r\n                <input className=\"popup-input\"  type=\"password\" placeholder=\"Confirm Password\" value={confirmPassword}\r\n                       onChange={comparePassword}/>\r\n\r\n                <input className=\"popup-submit\" type=\"submit\" value=\"Submit\"/>\r\n            </form>\r\n            <div className=\"popup-back\">\r\n                <button onClick={()=>props.openTab(0)} className=\"back-button\">&lt;- Back</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PasswordPopup;","import './Popup.css'\r\nimport {useState} from \"react\";\r\n\r\n\r\nfunction PhotoPopup(props) {\r\n  const [photoSrc, setPhotoSrc] = useState(props.photoSrc)\r\n  let [editingPhoto, setEditingPhoto] = useState(false)\r\n\r\n  const toDataURL = url => fetch(url)\r\n    .then(response => response.blob())\r\n    .then(blob => new Promise((resolve, reject) => {\r\n      const reader = new FileReader()\r\n      reader.onloadend = () => resolve(reader.result)\r\n      reader.onerror = reject\r\n      reader.readAsDataURL(blob)\r\n    }))\r\n\r\n  const setPhotoHandler = (event) => {\r\n    if (event.target.files && event.target.files[0]) {\r\n      setEditingPhoto(true)\r\n      toDataURL(URL.createObjectURL(event.target.files[0])).then(dataUrl => {\r\n        setPhotoSrc(dataUrl)\r\n      })\r\n    }\r\n  }\r\n  const toggleEditPhoto = () => {\r\n    setEditingPhoto((editingPhoto) => !editingPhoto)\r\n  }\r\n\r\n  const saveHandler = () => {\r\n    localStorage.removeItem(\"photoSrc\")\r\n    localStorage.setItem(\"photoSrc\", photoSrc)\r\n\r\n    toggleEditPhoto()\r\n  }\r\n\r\n  const undoHandler = () => {\r\n    setPhotoSrc(props.photoSrc)\r\n    toggleEditPhoto()\r\n  }\r\n\r\n  const closeSettings = () => {\r\n    props.onCloseSettings()\r\n  }\r\n\r\n  return (\r\n    <div className=\"popup-container\">\r\n      <button className=\"popup-close\" onClick={closeSettings}></button>\r\n      <div className=\"popup-photo\"><img src={photoSrc}/></div>\r\n      <div className=\"popup-name\">{props.name}</div>\r\n      <div>\r\n        <input type=\"file\" onClick={setPhotoHandler} className=\"popup-photo-select-btn\" name=\"photo\"\r\n               accept=\"image/png, image/jpeg\"/>\r\n      </div>\r\n      {editingPhoto && <div className=\"popup-accept\">\r\n        <button className=\"confirm\" name=\"accept\" onClick={saveHandler}>Accept</button>\r\n        <button className=\"undo\" name=\"undo\" onClick={undoHandler}>Undo</button>\r\n      </div>}\r\n      <div className=\"popup-back\">\r\n        <button onClick={() => props.openTab(0)} className=\"back-button\">&lt;- Back</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PhotoPopup;","import './Popup.css'\r\nimport MainPopup from \"./MainPopup\";\r\nimport {useEffect, useState} from \"react\";\r\nimport PasswordPopup from \"./PasswordPopup\";\r\nimport PhotoPopup from \"./PhotoPopup\";\r\n\r\nfunction Popup(props) {\r\n\r\n    const [activeTab, setActiveTab] = useState(0)\r\n\r\n    const handleOpenTab = (event) => {\r\n        setActiveTab(event)\r\n    }\r\n\r\n    const [photoSrc, setPhotoSrc] = useState(\"\")\r\n    const [name, setName] = useState(\"Test Name\")\r\n\r\n    useEffect(() => {\r\n        setPhotoSrc(localStorage.getItem(\"photoSrc\"))\r\n    })\r\n    const closeSettings = ()=>{\r\n        props.onCloseSettings()\r\n    }\r\n\r\n    return (\r\n        <div className=\"popup-overlay\">\r\n            {activeTab === 0 && <MainPopup photoSrc={photoSrc} name={name} onCloseSettings={closeSettings} openTab={handleOpenTab}/>}\r\n            {activeTab === 1 && <PasswordPopup openTab={handleOpenTab} onCloseSettings={closeSettings}/>}\r\n            {activeTab === 2 && <PhotoPopup photoSrc={photoSrc} name={name} onCloseSettings={closeSettings} openTab={handleOpenTab}/>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Popup;","export default __webpack_public_path__ + \"static/media/photo-default.4c56727e.svg\";","import \"./Header.css\"\r\nimport logo from '../../images/fox-head 1.svg'\r\nimport {useHistory, useLocation} from 'react-router-dom'\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n\r\nfunction Header(props) {\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n//later to change if credentials are present\r\n  const locationChats = () => {\r\n    return location.pathname === \"/chats\"\r\n  }\r\n\r\n  const logout = () => {\r\n    localStorage.clear();\r\n    dispatch({ type: \"LOGOUT\" });\r\n    history.replace(\"/login\");\r\n  }\r\n\r\n  const openSettings = () => {\r\n    props.onOpenSettings(true)\r\n  }\r\n\r\n  return (\r\n    <header>\r\n      <div className=\"header-logo\"><img alt=\"logo\" src={logo}/></div>\r\n      {locationChats() && <nav className=\"header-nav\">\r\n        <ul className=\"header-nav-list\">\r\n          <li>Chats</li>\r\n          <li onClick={openSettings}>Settings</li>\r\n          <li className=\"header-logout\" onClick={logout}>Logout</li>\r\n        </ul>\r\n      </nav>}\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header;","import './App.css';\r\nimport {Switch, Route, Redirect} from \"react-router-dom\";\r\nimport Chats from \"./pages/Chats\";\r\nimport SignUp from \"./pages/SignUp\";\r\nimport LogIn from \"./pages/LogIn\"\r\nimport Popup from \"./components/PopupAccount/Popup\";\r\nimport {useEffect, useState} from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport photo from \"./images/photo-default.svg\";\r\nimport Header from \"./components/Header/Header\";\r\n\r\n//in future might be deletated, as data already will be in binary format\r\nconst toDataURL = url => fetch(url)\r\n  .then(response => response.blob())\r\n  .then(blob => new Promise((resolve, reject) => {\r\n    const reader = new FileReader()\r\n    reader.onloadend = () => resolve(reader.result)\r\n    reader.onerror = reject\r\n    reader.readAsDataURL(blob)\r\n  }))\r\n\r\n\r\nfunction App() {\r\n  const isLoggedIn = useSelector((state) => state.isLoggedIn);\r\n\r\n  const [settingsOpened, setSettingsOpened] = useState(false)\r\n\r\n  useEffect(() => {\r\n    toDataURL(photo)\r\n      .then(dataUrl => {\r\n        localStorage.setItem(\"photoSrc\", dataUrl)\r\n      })\r\n  })\r\n\r\n  const openSettings = () => {\r\n    setSettingsOpened(true)\r\n  }\r\n\r\n  const closeSettings = () => {\r\n    setSettingsOpened(false)\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Header onOpenSettings={openSettings}/>\r\n      {settingsOpened && <Popup onCloseSettings={closeSettings}/>}\r\n      <Switch>\r\n        <Route path=\"/\" exact>\r\n          {!isLoggedIn ? <Redirect to=\"/login\" /> : <Redirect to=\"/chats\" />}\r\n        </Route>\r\n        <Route path=\"/chats\" exact>\r\n          {isLoggedIn ? <Chats/> : <Redirect to=\"/login\" />}\r\n        </Route>\r\n        <Route path=\"/signup\" exact>\r\n          {!isLoggedIn ? <SignUp/> : <Redirect to=\"/chats\" />}\r\n        </Route>\r\n        <Route path=\"/login\" exact>\r\n          {!isLoggedIn ? <LogIn/> : <Redirect to=\"/chats\" />}\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {createStore} from \"redux\";\r\n\r\nconst initialState = {\r\n  isLoggedIn: !!localStorage.getItem(\"userId\"),\r\n  userId: localStorage.getItem(\"userId\")\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"LOGIN\":\r\n      return {\r\n        ...state,\r\n        userId: action.payload,\r\n        isLoggedIn: true\r\n      };\r\n\r\n    case \"LOGOUT\":\r\n      return {\r\n        ...state,\r\n        userId: \"\",\r\n        isLoggedIn: false\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst store = createStore(authReducer);\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from \"react-router-dom\";\nimport reportWebVitals from './reportWebVitals';\nimport '@csstools/normalize.css'\nimport {Provider} from \"react-redux\";\nimport store from './store/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App/>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}