{"version":3,"sources":["components/ChatMessages/UserMessage.js","images/fox-avatar.svg","components/ChatMessages/OtherUserMessage.js","components/ChatMessages/SendMessage.js","images/plus.svg","components/ChatMessages/ChatMessages.js","images/add.svg","images/accept.svg","images/close.svg","components/Dialogs/DialogComponent.js","pages/Chats.js","services/postSignUp.js","components/SignUp/SignUpComponent.js","pages/SignUp.js","images/fox-head 1.svg","services/postLogin.js","components/LogIn/LogInComponent.js","pages/LogIn.js","components/PopupAccount/MainPopup.js","components/PopupAccount/PasswordPopup.js","components/PopupAccount/PhotoPopup.js","components/PopupAccount/Popup.js","images/photo-default.svg","components/Header/Header.js","App.js","reportWebVitals.js","store/store.js","index.js"],"names":["UserMessage","props","className","name","timestamp","text","OtherUserMessage","src","avatar","SendMessage","userId","useSelector","state","token","textInputRef","useRef","useState","enteredText","setEnteredText","sendMessage","event","preventDefault","onTextSent","target","value","bearer","fetch","method","body","JSON","stringify","data","room_id","roomId","headers","then","response","ok","json","id","onSubmit","ref","onChange","form","placeholder","onKeyPress","e","key","required","ChatMessages","dialog","setDialog","showAdd","setShowAdd","inviteInputRef","transformUnix","unixTimestamp","date","Date","getHours","getMinutes","substr","useEffect","interval","setInterval","messagesList","message","push","sender_id","time","sender_name","getDialog","clearInterval","inviteEmail","current","participant_email","alert","type","plus","alt","roomName","onClick","length","map","now","DialogComponent","dialogs","setDialogs","initialDialogs","setInitialDialogs","isSearch","setIsSearch","roomNameRef","dialogList","getDialogs","filteredDialogs","filter","toLowerCase","includes","onBlur","add","accept","close","openChat","Chats","isOpen","setIsOpen","setRoomId","setRoomName","postSignUp","a","console","log","SignUpComponent","fullName","setFullName","email","setEmail","password","setPassword","repeatedPassword","setRepeatedPassword","fullNameDirty","setFullNameDirty","emailDirty","setEmailDirty","passwordDirty","setPasswordDirty","repeatedPasswordDirty","setRepeatedPasswordDirty","fullNameError","setFullNameError","emailError","setEmailError","passwordError","setPasswordError","repeatedPasswordError","setRepeatedPasswordError","formValid","setFormValid","history","useHistory","blurHandler","full_name","fullNameHandler","test","String","emailHandler","passwordHandler","repeatedPasswordHandler","disabled","style","background","to","SignUp","postLogin","LogInComponent","dispatch","useDispatch","invalidCredentials","setInvalidCredentials","logo","payload","toString","localStorage","setItem","LogIn","MainPopup","onCloseSettings","photoSrc","openTab","clear","PasswordPopup","currentPassword","setCurrentPassword","newPassword","setNewPassword","confirmPassword","setConfirmPassword","PhotoPopup","setPhotoSrc","editingPhoto","setEditingPhoto","toggleEditPhoto","url","files","URL","createObjectURL","blob","Promise","resolve","reject","reader","FileReader","onloadend","result","onerror","readAsDataURL","dataUrl","removeItem","Popup","activeTab","setActiveTab","handleOpenTab","getItem","closeSettings","Header","location","useLocation","pathname","onOpenSettings","replace","App","isLoggedIn","settingsOpened","setSettingsOpened","photo","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","store","createStore","action","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a7a066a6.chunk.js","sourcesContent":["import './ChatMessages.css'\r\n\r\nfunction UserMessage(props) {\r\n    return (\r\n        <div className=\"user-message-container\">\r\n            <div className=\"user-message-data\"><p><span>{props.name}</span> <span>{props.timestamp}</span></p></div>\r\n            <div className=\"user-message-text\">{props.text}\r\n               </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserMessage;","export default __webpack_public_path__ + \"static/media/fox-avatar.a14ed2dc.svg\";","import './ChatMessages.css'\r\nimport avatar from '../../images/fox-avatar.svg'\r\n\r\nfunction OtherUserMessage(props) {\r\n    return (\r\n        <div className=\"other-user-message-container\">\r\n            <div className=\"other-user-message-photo\"><img src={avatar}/></div>\r\n            <div className=\"other-user-message\">\r\n                <div className=\"other-user-message-data\"><p><span>{props.name}</span> <span>{props.timestamp}</span></p></div>\r\n                <div className=\"other-user-message-text\">{props.text}\r\n            </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default OtherUserMessage;","import './ChatMessages.css'\r\nimport {useRef, useState} from 'react'\r\nimport {useSelector} from \"react-redux\";\r\n\r\nfunction SendMessage(props) {\r\n  const userId = useSelector((state) => state.userId);\r\n  const token = useSelector((state) => state.token);\r\n  const textInputRef = useRef();\r\n\r\n  const [enteredText, setEnteredText] = useState(\"\");\r\n\r\n  const getTextHandler = (event) => {\r\n    setEnteredText(event.target.value);\r\n  }\r\n\r\n  const sendMessage = (event) => {\r\n    event.preventDefault()\r\n    props.onTextSent(event.target.value)\r\n\r\n    let bearer  = 'Bearer ' + token;\r\n\r\n    fetch(\r\n      `http://81.180.72.35:8080/message/create/${userId}`,\r\n      {\r\n        method: \"POST\",\r\n        body: JSON.stringify({data: enteredText, room_id: props.roomId}),\r\n        headers: {\r\n          'Authorization': bearer,\r\n          'Content-Type': 'application/json',\r\n          'Accept': 'application/json',\r\n        }\r\n      }\r\n    )\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        }\r\n      })\r\n\r\n    setEnteredText(\"\")\r\n  }\r\n\r\n  return (\r\n    <div className=\"send-message-container\">\r\n      <form id=\"send-message-form\" onSubmit={sendMessage}>\r\n                <textarea ref={textInputRef} value={enteredText} onChange={getTextHandler}\r\n                          className=\"send-message-input\"\r\n                          form=\"send-message-form\" name=\"message\" placeholder=\"Enter the message and tap Enter...\"\r\n                          onKeyPress={(e) => e.key === 'Enter' && sendMessage(e)}\r\n                          required/>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SendMessage;","export default __webpack_public_path__ + \"static/media/plus.c60e15f2.svg\";","import UserMessage from \"./UserMessage\";\r\nimport OtherUserMessage from \"./OtherUserMessage\";\r\nimport SendMessage from \"./SendMessage\";\r\nimport {useEffect, useRef, useState} from \"react\";\r\nimport avatar from '../../images/fox-avatar.svg'\r\nimport plus from '../../images/plus.svg'\r\nimport {useSelector} from \"react-redux\";\r\n\r\nfunction ChatMessages(props) {\r\n  const [dialog, setDialog] = useState([]);\r\n  const [showAdd, setShowAdd] = useState(false);\r\n  const inviteInputRef = useRef();\r\n  const userId = useSelector((state) => state.userId);\r\n  const token = useSelector((state) => state.token);\r\n\r\n  const transformUnix = (unixTimestamp) => {\r\n    let date = new Date(unixTimestamp * 1000);\r\n    let hours = date.getHours();\r\n    let minutes = \"0\" + date.getMinutes();\r\n    return hours + ':' + minutes.substr(-2)\r\n  };\r\n\r\n  const typeMessage = (id, timestamp, text, name) => {\r\n    if (id != userId) {\r\n      return <OtherUserMessage\r\n        timestamp={timestamp} text={text} name={name}/>\r\n    } else {\r\n      return <UserMessage timestamp={timestamp} text={text} name=\"Me\"/>\r\n    }\r\n  }\r\n\r\n  const getDialog = () => {\r\n    let bearer  = 'Bearer ' + token;\r\n    fetch(`http://81.180.72.35:8080/message/${props.roomId}`\r\n      , {\r\n        method: 'GET',\r\n        headers: {\r\n          'Authorization': bearer,\r\n          'Content-Type': 'application/json',\r\n          'Accept': 'application/json'\r\n        }\r\n      }\r\n    ).then(function (response) {\r\n      return response.json();\r\n    })\r\n      .then(function (data) {\r\n        const messagesList = []\r\n        for (const message in data.data) {\r\n          messagesList.push({\r\n            text: data.data[message].data,\r\n            userId: data.data[message].sender_id,\r\n            timestamp: transformUnix(data.data[message].time),\r\n            name: data.data[message].sender_name\r\n          })\r\n        }\r\n        setDialog(messagesList)\r\n      });\r\n  }\r\n\r\n  const textSentHandler = (text) => {\r\n    setDialog((dialog) => [...dialog, {\r\n      text,\r\n      userId,\r\n      timestamp: transformUnix(Date.now()),\r\n      name: \"Me\"\r\n    }])\r\n  }\r\n\r\n  const sendInvite = (event) => {\r\n    event.preventDefault()\r\n    const inviteEmail = inviteInputRef.current.value;\r\n    fetch(\r\n      `http://81.180.72.35:8080/room/add/${userId}`,\r\n      {\r\n        method: \"POST\",\r\n        body: JSON.stringify({participant_email: inviteEmail, room_id: props.roomId}),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    )\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          alert(`Invited ${inviteEmail} to this room`)\r\n          return response.json();\r\n        } else {\r\n          response.json().then((data) => {\r\n            alert(`Invalid email`)\r\n          });\r\n        }\r\n      })\r\n    setShowAdd(false)\r\n  };\r\n//Please when working, comment this\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      getDialog()\r\n    }, 3000);\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, [props.roomId])\r\n\r\n  //and uncomment this\r\n  // useEffect(() => {\r\n  //   getDialog()\r\n  // }, [props.roomId])\r\n\r\n  return (\r\n    <div className=\"chat-messages-container\">\r\n      {showAdd && <div className=\"chat-add-participant\">\r\n        <div className=\"heading\">Add a participant</div>\r\n        <form onSubmit={sendInvite}>\r\n          <input type=\"email\" placeholder=\"Enter user's email\" ref={inviteInputRef}/>\r\n          <input type=\"image\" src={plus} alt=\"Add user\"/>\r\n        </form>\r\n      </div>}\r\n      <div className=\"chat-messages-header\">\r\n        <div className=\"chat-messages-avatar\"><img src={avatar}/></div>\r\n        <span>{props.roomName}</span>\r\n        <button className=\"chat-messages-add\" onClick={() => setShowAdd(true)}><img src={plus} alt=\"Add participants\"/>\r\n        </button>\r\n        <button className=\"chat-messages-back\">&lt;-Back</button>\r\n      </div>\r\n      <div className=\"chat-messages-dialog-container\">\r\n        {\r\n          dialog && dialog.length > 0 && dialog.map((message) => typeMessage(message.userId, message.timestamp, message.text, message.name))\r\n        }\r\n        {dialog.length < 0 &&\r\n        <div className=\"chat-messages-container-empty\">Write first to start chatting</div>}\r\n      </div>\r\n      <SendMessage roomId={props.roomId} onTextSent={textSentHandler}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatMessages;","export default __webpack_public_path__ + \"static/media/add.061309f3.svg\";","export default __webpack_public_path__ + \"static/media/accept.acf55764.svg\";","export default __webpack_public_path__ + \"static/media/close.d6fc4d51.svg\";","import React from \"react\";\r\nimport './Dialog.css'\r\nimport {useEffect, useState, useRef} from \"react\";\r\nimport avatar from \"../../images/fox-avatar.svg\";\r\nimport add from \"../../images/add.svg\";\r\nimport accept from \"../../images/accept.svg\";\r\nimport close from \"../../images/close.svg\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\nexport default function DialogComponent(props) {\r\n  const userId = useSelector((state) => state.userId);\r\n  const token = useSelector((state) => state.token);\r\n\r\n  const [dialogs, setDialogs] = useState([]);\r\n  const [initialDialogs, setInitialDialogs] = useState([]);\r\n  const [isSearch, setIsSearch] = useState(true);\r\n  const roomNameRef = useRef();\r\n\r\n  const searchDialog = (event) => {\r\n    const filteredDialogs = dialogs.filter(dialog => dialog.name.toLowerCase().includes(event.target.value.toLowerCase()));\r\n    event.target.value.length === 0 ? setDialogs(initialDialogs) : setDialogs(filteredDialogs)\r\n  };\r\n\r\n  const getDialogs = () => {\r\n    let bearer = 'Bearer ' + token;\r\n    fetch(`http://81.180.72.35:8080/room/${userId}`\r\n      , {\r\n        method: 'GET',\r\n        headers: {\r\n          'Authorization': bearer,\r\n          'Content-Type': 'application/json',\r\n          'Accept': 'application/json',\r\n\r\n        }\r\n      }\r\n    ).then(function (response) {\r\n      return response.json();\r\n    })\r\n      .then(function (data) {\r\n        const dialogs = data.data;\r\n        const dialogList = []\r\n        for (const dialog in dialogs) {\r\n          dialogList.push({\r\n            name: dialogs[dialog].name,\r\n            id: dialogs[dialog].id\r\n          })\r\n        }\r\n        setDialogs(dialogList)\r\n        setInitialDialogs(dialogList)\r\n      });\r\n  }\r\n\r\n  const createRoom = (event) => {\r\n    event.preventDefault();\r\n    let bearer = 'Bearer ' + token;\r\n    const name = roomNameRef.current.value;\r\n    fetch(\r\n      `http://81.180.72.35:8080/room/create/${userId}`,\r\n      {\r\n        method: \"POST\",\r\n        body: JSON.stringify({name}),\r\n        headers: {\r\n          'Authorization': bearer,\r\n          'Content-Type': 'application/json',\r\n          'Accept': 'application/json',\r\n        }\r\n      }\r\n    )\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        }\r\n      }).then(function (data) {\r\n        setInitialDialogs((initialDialogs) => [...initialDialogs, {\r\n          name,\r\n          id: data.data.id\r\n        }])\r\n        setDialogs((dialogs) => [...dialogs, {\r\n          name,\r\n          id: data.data.id\r\n        }])\r\n      }\r\n    );\r\n    setIsSearch(true);\r\n  };\r\n\r\n  const resetSearch = () => {\r\n    setDialogs(initialDialogs);\r\n  };\r\n//when working comment this\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      getDialogs()\r\n    }, 5000);\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, [])\r\n\r\n  //and uncomment this\r\n  // useEffect(() => {\r\n  //   getDialogs()\r\n  // }, [])\r\n\r\n  return (\r\n    <div className=\"dialog-wrapper\">\r\n      {!isSearch ?\r\n        <div className=\"dialog-create-room\">\r\n          <form onSubmit={createRoom}>\r\n            <input type=\"text\"\r\n                   placeholder=\"Create a room\"\r\n                   className=\"dialog-input\"\r\n                   ref={roomNameRef}\r\n            />\r\n            <input type=\"image\" src={accept} alt=\"Create\" className=\"dialog-accept\"/>\r\n            <button className=\"dialog-cancel\" onClick={() => {\r\n              setIsSearch(true);\r\n            }}><img src={close}/></button>\r\n          </form>\r\n        </div> :\r\n        <div className=\"dialog-search-wrapper\">\r\n          <input type=\"text\"\r\n                 placeholder=\"Search\"\r\n                 className=\"dialog-input\"\r\n                 onChange={searchDialog}\r\n                 onBlur={resetSearch}\r\n          />\r\n          <button className=\"dialog-add\" onClick={() => setIsSearch(false)}><img src={add}/></button>\r\n        </div>}\r\n      <div>\r\n        <ul className=\"dialog-list\">\r\n          {dialogs.map(dialog => (\r\n            <li className=\"dialog-list-item\" onClick={() => props.openChat(dialog.id, dialog.name)}>\r\n              <div className=\"dialog-photo\"><img src={avatar}/></div>\r\n              <div className=\"dialog-name\">{dialog.name}</div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import ChatMessages from \"../components/ChatMessages/ChatMessages\"\r\nimport DialogComponent from \"../components/Dialogs/DialogComponent\"\r\nimport {useState} from \"react\";\r\nimport \"./Chats.css\"\r\n\r\nfunction Chats() {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [roomId, setRoomId] = useState(null);\r\n  const [roomName, setRoomName] = useState(null);\r\n\r\n  const openChat = (id, name) => {\r\n    setIsOpen(true);\r\n    setRoomId(id);\r\n    setRoomName(name)\r\n  };\r\n\r\n    return (\r\n        <div className=\"chats-wrapper\">\r\n            <DialogComponent openChat={openChat}/>\r\n          {isOpen && <ChatMessages roomId={roomId} roomName={roomName}/>}\r\n          {!isOpen && <div className=\"chats-none\">No chat opened.</div>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chats;","export const postSignUp = async (body) => {\r\n    try {\r\n        const response = await fetch(\r\n            'http://81.180.72.35:8080/user/register',\r\n            {\r\n                method: \"POST\",\r\n                headers: {\r\n                    'Content-type': 'application/json',\r\n                },\r\n                body: JSON.stringify(body),\r\n            }\r\n        );\r\n        return await response.json();\r\n    } catch (error) {\r\n        console.log(error.message);\r\n    }\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport './SignUp.css'\r\nimport {Link, useHistory} from \"react-router-dom\";\r\nimport {postSignUp} from \"../../services/postSignUp\";\r\n\r\n\r\n\r\nexport default function SignUpComponent (){\r\n    \r\n    const [fullName, setFullName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [repeatedPassword, setRepeatedPassword] = useState(\"\");\r\n    const [fullNameDirty, setFullNameDirty] = useState(false);\r\n    const [emailDirty, setEmailDirty] = useState(false);\r\n    const [passwordDirty, setPasswordDirty] = useState(false);\r\n    const [repeatedPasswordDirty, setRepeatedPasswordDirty] = useState(false);\r\n    const [fullNameError, setFullNameError] = useState(\"Full name fild can't be empty\");\r\n    const [emailError, setEmailError] = useState(\"Email filed can't be empty\");\r\n    const [passwordError, setPasswordError] = useState(\"Password filed can't be empty\");\r\n    const [repeatedPasswordError, setRepeatedPasswordError] = useState(\"Repeated password filed can't be empty\");\r\n    const [formValid, setFormValid] = useState(false);\r\n\r\n    let history = useHistory();\r\n\r\n    const fullNameHandler = (e) => {\r\n        setFullName(e.target.value);\r\n        if(!e.target.value){\r\n            setFullNameError(\"Full name field can't be empty\");\r\n        }\r\n        else {\r\n            setFullNameError(\"\")\r\n        }\r\n    }\r\n\r\n    const emailHandler = (e) => {\r\n        setEmail(e.target.value)\r\n        const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n         if (!re.test(String(e.target.value).toLowerCase())){\r\n             setEmailError('Email is invalid');\r\n             if(!e.target.value){\r\n                 setEmailError(\"Email filed can't be empty\");\r\n             }\r\n         }\r\n         else {\r\n             setEmailError(\"\");\r\n         }\r\n    }\r\n\r\n    const passwordHandler = (e) => {\r\n        setPassword(e.target.value);\r\n        if(e.target.value.length < 7){\r\n            setPasswordError(\"Password's length can't be less then 7\");\r\n            if(!e.target.value){\r\n                setPasswordError(\"Password filed can't be empty\")\r\n            }\r\n        }\r\n        else{\r\n            setPasswordError(\"\");\r\n        }\r\n    }\r\n\r\n    const repeatedPasswordHandler = (e) => {\r\n        setRepeatedPassword(e.target.value);\r\n        if(e.target.value !== password){\r\n            setRepeatedPasswordError(\"Passwords don't match\");\r\n        }\r\n        else{\r\n            setRepeatedPasswordError(\"\");\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(emailError || passwordError || fullNameError){\r\n            setFormValid(false);\r\n        }\r\n        else {\r\n            setFormValid(true);\r\n        }\r\n    }, [emailError, passwordError, fullNameError])\r\n\r\n    const blurHandler = (e) => {\r\n        switch (e.target.name){\r\n            case 'email':\r\n                setEmailDirty(true)\r\n                break\r\n            case 'password':\r\n                setPasswordDirty(true)\r\n                break\r\n            case 'fullName':\r\n                setFullNameDirty(true)\r\n                break\r\n            case 'confirmPassword':\r\n                setRepeatedPasswordDirty(true)\r\n                break\r\n        }\r\n    }\r\n\r\n    const submitHandler = (event) =>{\r\n        event.preventDefault();\r\n\r\n        const response = postSignUp({full_name: fullName, email: email, password: password});\r\n        history.push(\"/login\");\r\n    }\r\n\r\n    return(\r\n        <div className=\"wrapper\">\r\n            <h1 className=\"header\">Sign up</h1>\r\n            <div className=\"form\">\r\n                <form onSubmit={submitHandler}>\r\n                    {(fullNameError && fullNameDirty) && <span className=\"error\">{fullNameError}</span>}\r\n                    <input type=\"text\" placeholder=\"Enter full name\"\r\n                           value={fullName}\r\n                           name=\"fullName\"\r\n                           onBlur={e => blurHandler(e)}\r\n                           onChange={(e) => fullNameHandler(e)}\r\n                    />\r\n\r\n                    {(emailError && emailDirty) && <span className=\"error\">{emailError}</span>}\r\n                    <input type=\"text\" placeholder=\"Enter email\"\r\n                           value={email} name=\"email\"\r\n                           onBlur={e => blurHandler(e)}\r\n                           onChange={(e) => emailHandler(e)}\r\n                    />\r\n\r\n                    {(passwordError && passwordDirty) && <span className=\"error\">{passwordError}</span>}\r\n                    <input type=\"password\" placeholder=\"Enter password\"\r\n                           value={password} name=\"password\"\r\n                           onBlur={e => blurHandler(e)}\r\n                           onChange={(e) => passwordHandler(e)}\r\n                    />\r\n                    {(repeatedPasswordError && repeatedPasswordDirty) && <span className=\"error\">{repeatedPasswordError}</span>}\r\n                    <input type=\"password\"\r\n                           placeholder=\"Confirm password\"\r\n                           value={repeatedPassword} name=\"confirmPassword\"\r\n                           onBlur={e => blurHandler(e)}\r\n                           onChange={(e) => repeatedPasswordHandler(e)}\r\n                    />\r\n                    <button disabled={!formValid}\r\n                            type=\"submit\"\r\n                            className=\"btn-signUp\"\r\n                            style={!formValid ? {background: \"gray\"} : {}}\r\n                    >Sign up</button>\r\n                </form>\r\n                <div>\r\n                    <p className=\"p-already-register\">Already registered? <Link to=\"/login\">Sign in</Link></p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport SignUpComponent from \"../components/SignUp/SignUpComponent\";\r\n\r\nexport default function SignUp(){\r\n    return(\r\n        <div>\r\n            <SignUpComponent/>\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/fox-head 1.e9972e00.svg\";","export const postLogin = async (body) => {\r\n    try {\r\n        const response = await fetch(\r\n            'http://81.180.72.35:8080/user/login',\r\n            {\r\n                method: \"POST\",\r\n                headers: {\r\n                    'Content-type': 'application/json',\r\n                },\r\n                body: JSON.stringify(body),\r\n            }\r\n        );\r\n        return await response.json();\r\n    } catch (error) {\r\n        console.log(error.message);\r\n    }\r\n}","import React, {useState} from \"react\";\r\nimport './LogIn.css'\r\nimport logo from '../../images/fox-head 1.svg'\r\nimport {Link, useHistory} from \"react-router-dom\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {postLogin} from \"../../services/postLogin\";\r\n\r\nexport default function LogInComponent() {\r\n  const dispatch = useDispatch();\r\n\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [invalidCredentials, setInvalidCredentials] = useState(false);\r\n  const history = useHistory();\r\n\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const response = postLogin({email: email, password: password}).then(function (response) {\r\n        if (response.data !== null) {\r\n          dispatch({\r\n            type: \"LOGIN\",\r\n            payload: {\r\n                id: response.data.id.toString(),\r\n                token: response.data.token.toString()\r\n            }\r\n          });\r\n          localStorage.setItem('userId', response.data.id.toString())\r\n          localStorage.setItem('token', response.data.token.toString())\r\n          history.push('/chats');\r\n          setInvalidCredentials(false);\r\n        } else {\r\n          setInvalidCredentials(true);\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"logInWrapper\">\r\n      <img src={logo} alt=\"Logo\" className=\"logo\"/>\r\n      <p className=\"logo-text\">Foxy</p>\r\n      <form onSubmit={submitHandler} onChange={() => setInvalidCredentials(false)}>\r\n        <input type=\"text\"\r\n               placeholder=\"Email\"\r\n               value={email}\r\n               onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n        <input type=\"password\"\r\n               placeholder=\"Password\"\r\n               value={password}\r\n               onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n        {invalidCredentials && <div className=\"error-invalid\">Invalid credentials</div>}\r\n        <button type=\"submit\" className=\"btn-signUp\">Login</button>\r\n      </form>\r\n      <div>\r\n        <p className=\"p-already-register\">Don't have a profile? <Link to=\"/signup\">Sign up</Link></p>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React from \"react\";\r\nimport LogInComponent from \"../components/LogIn/LogInComponent\";\r\n\r\nexport default function LogIn () {\r\n    return(\r\n        <div>\r\n            <LogInComponent/>\r\n        </div>\r\n    )\r\n}","import \"./Popup.css\"\r\nimport {useState, useEffect} from \"react\"\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nfunction MainPopup(props) {\r\n  let history = useHistory();\r\n\r\n  const closeSettings = () => {\r\n    props.onCloseSettings(true)\r\n  }\r\n\r\n  const logout = () =>{\r\n    localStorage.clear();\r\n    history.push(\"/login\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"popup-container\">\r\n      <button className=\"popup-close\" onClick={closeSettings}></button>\r\n      <div className=\"popup-photo\"><img alt=\"profile-pic\" src={props.photoSrc}/>\r\n      </div>\r\n      <div className=\"popup-name\">{props.name}</div>\r\n      <div className=\"popup-option\">\r\n        <button className=\"popup-option-button privacy-button\" onClick={() => props.openTab(1)}>Privacy and\r\n          security\r\n        </button>\r\n      </div>\r\n      <div className=\"popup-option\">\r\n        <button className=\"popup-option-button change-photo-button\" onClick={() => props.openTab(2)}>Change\r\n          photo\r\n        </button>\r\n      </div>\r\n      <div className=\"popup-logout\">\r\n        <button className=\"popup-option-button logout-button\" onClick={logout}>Logout</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainPopup;","import './Popup.css'\r\nimport {useState} from 'react'\r\n\r\nfunction PasswordPopup(props) {\r\n\r\n    const [currentPassword, setCurrentPassword] = useState(\"\")\r\n    const [newPassword, setNewPassword] = useState(\"\")\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\")\r\n\r\n    const handleCurrentPassword = (event) => {\r\n        setCurrentPassword(event.target.value)\r\n    }\r\n\r\n    const handleNewPassword = (event) => {\r\n        setNewPassword(event.target.value)\r\n    }\r\n\r\n    const comparePassword = (event) => {\r\n        setConfirmPassword(event.target.value)\r\n    }\r\n    const handleSubmit = () => {\r\n      \r\n    }\r\n  const closeSettings = () => {\r\n    props.onCloseSettings()\r\n  }\r\n\r\n  return (\r\n    <div className=\"popup-container\">\r\n      <button className=\"popup-close\" onClick={closeSettings}></button>\r\n            <form className=\"popup-form-password\" onSubmit={handleSubmit}>\r\n              <div className=\"popup-headline\">Change Password</div>\r\n                <input className=\"popup-input\" type=\"password\" placeholder=\"Current password\" value={currentPassword}\r\n                       onChange={handleCurrentPassword}/>\r\n\r\n                <input className=\"popup-input\"  type=\"password\" placeholder=\"New Password\" value={newPassword}\r\n                       onChange={handleNewPassword}/>\r\n\r\n                <input className=\"popup-input\"  type=\"password\" placeholder=\"Confirm Password\" value={confirmPassword}\r\n                       onChange={comparePassword}/>\r\n\r\n                <input className=\"popup-submit\" type=\"submit\" value=\"Submit\"/>\r\n            </form>\r\n            <div className=\"popup-back\">\r\n                <button onClick={()=>props.openTab(0)} className=\"back-button\">&lt;- Back</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PasswordPopup;","import './Popup.css'\r\nimport {useState} from \"react\";\r\n\r\n\r\nfunction PhotoPopup(props) {\r\n  const [photoSrc, setPhotoSrc] = useState(props.photoSrc)\r\n  let [editingPhoto, setEditingPhoto] = useState(false)\r\n\r\n  const toDataURL = url => fetch(url)\r\n    .then(response => response.blob())\r\n    .then(blob => new Promise((resolve, reject) => {\r\n      const reader = new FileReader()\r\n      reader.onloadend = () => resolve(reader.result)\r\n      reader.onerror = reject\r\n      reader.readAsDataURL(blob)\r\n    }))\r\n\r\n  const setPhotoHandler = (event) => {\r\n    if (event.target.files && event.target.files[0]) {\r\n      setEditingPhoto(true)\r\n      toDataURL(URL.createObjectURL(event.target.files[0])).then(dataUrl => {\r\n        setPhotoSrc(dataUrl)\r\n      })\r\n    }\r\n  }\r\n  const toggleEditPhoto = () => {\r\n    setEditingPhoto((editingPhoto) => !editingPhoto)\r\n  }\r\n\r\n  const saveHandler = () => {\r\n    localStorage.removeItem(\"photoSrc\")\r\n    localStorage.setItem(\"photoSrc\", photoSrc)\r\n\r\n    toggleEditPhoto()\r\n  }\r\n\r\n  const undoHandler = () => {\r\n    setPhotoSrc(props.photoSrc)\r\n    toggleEditPhoto()\r\n  }\r\n\r\n  const closeSettings = () => {\r\n    props.onCloseSettings()\r\n  }\r\n\r\n  return (\r\n    <div className=\"popup-container\">\r\n      <button className=\"popup-close\" onClick={closeSettings}></button>\r\n      <div className=\"popup-photo\"><img src={photoSrc}/></div>\r\n      <div className=\"popup-name\">{props.name}</div>\r\n      <div>\r\n        <input type=\"file\" onClick={setPhotoHandler} className=\"popup-photo-select-btn\" name=\"photo\"\r\n               accept=\"image/png, image/jpeg\"/>\r\n      </div>\r\n      {editingPhoto && <div className=\"popup-accept\">\r\n        <button className=\"confirm\" name=\"accept\" onClick={saveHandler}>Accept</button>\r\n        <button className=\"undo\" name=\"undo\" onClick={undoHandler}>Undo</button>\r\n      </div>}\r\n      <div className=\"popup-back\">\r\n        <button onClick={() => props.openTab(0)} className=\"back-button\">&lt;- Back</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PhotoPopup;","import './Popup.css'\r\nimport MainPopup from \"./MainPopup\";\r\nimport {useEffect, useState} from \"react\";\r\nimport PasswordPopup from \"./PasswordPopup\";\r\nimport PhotoPopup from \"./PhotoPopup\";\r\n\r\nfunction Popup(props) {\r\n\r\n    const [activeTab, setActiveTab] = useState(0)\r\n\r\n    const handleOpenTab = (event) => {\r\n        setActiveTab(event)\r\n    }\r\n\r\n    const [photoSrc, setPhotoSrc] = useState(\"\")\r\n    const [name, setName] = useState(\"Test Name\")\r\n\r\n    useEffect(() => {\r\n        setPhotoSrc(localStorage.getItem(\"photoSrc\"))\r\n    })\r\n    const closeSettings = ()=>{\r\n        props.onCloseSettings()\r\n    }\r\n\r\n    return (\r\n        <div className=\"popup-overlay\">\r\n            {activeTab === 0 && <MainPopup photoSrc={photoSrc} name={name} onCloseSettings={closeSettings} openTab={handleOpenTab}/>}\r\n            {activeTab === 1 && <PasswordPopup openTab={handleOpenTab} onCloseSettings={closeSettings}/>}\r\n            {activeTab === 2 && <PhotoPopup photoSrc={photoSrc} name={name} onCloseSettings={closeSettings} openTab={handleOpenTab}/>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Popup;","export default __webpack_public_path__ + \"static/media/photo-default.4c56727e.svg\";","import \"./Header.css\"\r\nimport logo from '../../images/fox-head 1.svg'\r\nimport {useHistory, useLocation} from 'react-router-dom'\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n\r\nfunction Header(props) {\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n//later to change if credentials are present\r\n  const locationChats = () => {\r\n    return location.pathname === \"/chats\"\r\n  }\r\n\r\n  const logout = () => {\r\n    localStorage.clear();\r\n    dispatch({ type: \"LOGOUT\" });\r\n    localStorage.clear()\r\n    history.replace(\"/login\");\r\n  }\r\n\r\n  const openSettings = () => {\r\n    props.onOpenSettings(true)\r\n  }\r\n\r\n  return (\r\n    <header>\r\n      <div className=\"header-logo\"><img alt=\"logo\" src={logo}/></div>\r\n      {locationChats() && <nav className=\"header-nav\">\r\n        <ul className=\"header-nav-list\">\r\n          <li>Chats</li>\r\n          <li onClick={openSettings}>Settings</li>\r\n          <li className=\"header-logout\" onClick={logout}>Logout</li>\r\n        </ul>\r\n      </nav>}\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header;","import './App.css';\r\nimport {Switch, Route, Redirect} from \"react-router-dom\";\r\nimport Chats from \"./pages/Chats\";\r\nimport SignUp from \"./pages/SignUp\";\r\nimport LogIn from \"./pages/LogIn\"\r\nimport Popup from \"./components/PopupAccount/Popup\";\r\nimport {useEffect, useState} from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport photo from \"./images/photo-default.svg\";\r\nimport Header from \"./components/Header/Header\";\r\n\r\n//in future might be deletated, as data already will be in binary format\r\nconst toDataURL = url => fetch(url)\r\n  .then(response => response.blob())\r\n  .then(blob => new Promise((resolve, reject) => {\r\n    const reader = new FileReader()\r\n    reader.onloadend = () => resolve(reader.result)\r\n    reader.onerror = reject\r\n    reader.readAsDataURL(blob)\r\n  }))\r\n\r\n\r\nfunction App() {\r\n  const isLoggedIn = useSelector((state) => state.isLoggedIn);\r\n\r\n  const [settingsOpened, setSettingsOpened] = useState(false)\r\n\r\n  useEffect(() => {\r\n    toDataURL(photo)\r\n      .then(dataUrl => {\r\n        localStorage.setItem(\"photoSrc\", dataUrl)\r\n      })\r\n  })\r\n\r\n  const openSettings = () => {\r\n    setSettingsOpened(true)\r\n  }\r\n\r\n  const closeSettings = () => {\r\n    setSettingsOpened(false)\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Header onOpenSettings={openSettings}/>\r\n      {settingsOpened && <Popup onCloseSettings={closeSettings}/>}\r\n      <Switch>\r\n        <Route path=\"/\" exact>\r\n          {!isLoggedIn ? <Redirect to=\"/login\" /> : <Redirect to=\"/chats\" />}\r\n        </Route>\r\n        <Route path=\"/chats\" exact>\r\n          {isLoggedIn ? <Chats/> : <Redirect to=\"/login\" />}\r\n        </Route>\r\n        <Route path=\"/signup\" exact>\r\n          {!isLoggedIn ? <SignUp/> : <Redirect to=\"/chats\" />}\r\n        </Route>\r\n        <Route path=\"/login\" exact>\r\n          {!isLoggedIn ? <LogIn/> : <Redirect to=\"/chats\" />}\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {createStore} from \"redux\";\r\n\r\nconst initialState = {\r\n  isLoggedIn: !!localStorage.getItem(\"userId\"),\r\n  userId: localStorage.getItem(\"userId\"),\r\n  token: localStorage.getItem(\"token\")\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"LOGIN\":\r\n      return {\r\n        ...state,\r\n        userId: action.payload.id,\r\n        token: action.payload.token,\r\n        isLoggedIn: true\r\n      };\r\n\r\n    case \"LOGOUT\":\r\n      return {\r\n        ...state,\r\n        userId: \"\",\r\n        token: \"\",\r\n        isLoggedIn: false\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst store = createStore(authReducer);\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from \"react-router-dom\";\nimport reportWebVitals from './reportWebVitals';\nimport '@csstools/normalize.css'\nimport {Provider} from \"react-redux\";\nimport store from './store/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App/>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}